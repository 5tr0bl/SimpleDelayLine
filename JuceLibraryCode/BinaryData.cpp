/* ==================================== JUCER_BINARY_RESOURCE ====================================

   This is an auto-generated file: Any edits you make may be overwritten!

*/

#include <cstring>

namespace BinaryData
{

//================== hrir_frontal.wav ==================
static const unsigned char temp_binary_data_0[] =
{ 82,73,70,70,36,4,0,0,87,65,86,69,102,109,116,32,16,0,0,0,1,0,2,0,68,172,0,0,16,177,2,0,4,0,16,0,100,97,116,97,0,4,0,0,244,255,252,255,10,0,5,0,5,0,2,0,9,0,13,0,19,0,12,0,14,0,19,0,29,0,22,0,20,0,25,0,38,0,32,0,31,0,33,0,45,0,44,0,40,0,41,0,52,0,54,0,
55,0,55,0,62,0,67,0,75,0,59,0,58,0,82,0,88,0,74,0,88,0,93,0,94,0,110,0,101,0,101,0,155,0,89,0,54,255,179,255,22,0,200,255,86,2,122,1,72,255,227,255,175,0,143,2,255,2,172,253,227,251,222,33,45,84,255,127,255,127,181,76,138,253,132,71,224,91,65,75,52,57,
241,149,0,128,71,188,104,228,145,170,119,203,113,135,74,156,235,227,202,205,202,33,191,47,81,79,229,93,70,245,1,241,238,40,47,28,193,60,181,47,68,32,24,22,247,231,77,212,61,205,226,225,172,249,230,241,237,234,169,252,246,234,92,241,99,235,150,221,166,
27,229,32,81,9,78,27,39,28,143,23,51,13,122,14,55,9,58,26,194,250,121,245,94,250,243,246,125,12,150,250,34,241,51,238,223,254,104,240,6,244,144,239,51,7,101,254,209,254,74,253,126,2,48,0,146,248,74,252,181,250,56,15,220,241,254,6,65,243,213,4,84,252,
211,248,128,2,62,253,234,7,194,255,70,1,21,253,104,9,7,254,216,0,145,255,52,5,166,252,175,254,200,253,157,1,184,5,114,250,209,254,136,253,78,2,79,252,115,0,202,255,199,1,66,255,157,253,132,1,98,1,154,1,199,253,132,2,82,1,251,3,163,0,27,255,39,0,83,1,
144,255,25,254,240,254,216,255,253,255,136,252,213,255,226,255,88,0,170,252,222,254,222,255,17,1,131,255,163,255,4,2,123,1,16,1,68,255,58,2,97,0,225,1,227,255,30,1,182,0,252,0,249,255,41,255,93,1,149,255,224,255,12,255,204,0,80,0,132,1,174,254,145,0,
154,0,184,255,28,0,236,255,76,1,65,0,22,0,5,255,3,1,105,255,78,255,12,255,10,0,32,0,132,255,144,255,130,255,147,0,103,255,246,255,5,0,47,0,105,0,203,255,17,0,129,0,96,0,249,255,202,255,3,0,114,0,37,0,2,0,204,0,124,0,176,0,192,255,76,0,116,0,76,0,239,
255,25,0,118,0,21,0,208,255,134,255,210,255,148,255,141,255,223,254,233,255,60,255,226,255,137,255,220,255,26,0,32,0,7,0,98,0,152,0,191,0,247,0,172,0,48,1,205,0,248,0,85,0,215,0,174,0,128,0,116,0,77,0,117,0,78,0,247,255,19,0,230,255,151,255,166,255,147,
255,159,255,204,255,69,255,159,255,39,255,83,255,48,255,29,255,87,255,127,255,142,255,144,255,179,255,159,255,203,255,154,255,230,255,220,255,78,0,5,0,80,0,44,0,66,0,40,0,0,0,38,0,45,0,19,0,39,0,37,0,52,0,104,0,68,0,105,0,65,0,36,0,54,0,53,0,54,0,83,
0,26,0,41,0,214,255,248,255,171,255,182,255,173,255,186,255,203,255,211,255,186,255,207,255,184,255,193,255,207,255,188,255,243,255,199,255,5,0,246,255,16,0,12,0,16,0,243,255,9,0,232,255,4,0,4,0,51,0,56,0,45,0,57,0,37,0,44,0,45,0,37,0,73,0,56,0,66,0,
84,0,50,0,77,0,52,0,49,0,47,0,55,0,54,0,64,0,24,0,16,0,5,0,200,255,201,255,152,255,184,255,156,255,183,255,137,255,162,255,130,255,129,255,148,255,165,255,199,255,227,255,16,0,56,0,111,0,103,0,140,0,120,0,133,0,139,0,148,0,155,0,166,0,141,0,134,0,101,
0,79,0,51,0,33,0,3,0,8,0,250,255,250,255,218,255,238,255,204,255,214,255,184,255,192,255,186,255,202,255,192,255,211,255,184,255,198,255,196,255,182,255,248,255,213,255,16,0,253,255,37,0,27,0,39,0,14,0,58,0,51,0,77,0,79,0,98,0,118,0,106,0,130,0,100,0,
109,0,61,0,56,0,36,0,40,0,26,0,23,0,7,0,1,0,1,0,236,255,215,255,185,255,190,255,173,255,181,255,176,255,179,255,157,255,179,255,161,255,167,255,176,255,155,255,156,255,166,255,181,255,158,255,190,255,190,255,223,255,209,255,236,255,4,0,29,0,11,0,31,0,
13,0,11,0,40,0,31,0,17,0,24,0,8,0,250,255,2,0,236,255,25,0,15,0,247,255,10,0,228,255,221,255,44,0,3,0,23,0,3,0,255,255,241,255,242,255,2,0,211,255,0,0 };

const char* hrir_frontal_wav = (const char*) temp_binary_data_0;

//================== hrir_lateral.wav ==================
static const unsigned char temp_binary_data_1[] =
{ 82,73,70,70,36,4,0,0,87,65,86,69,102,109,116,32,16,0,0,0,1,0,2,0,68,172,0,0,16,177,2,0,4,0,16,0,100,97,116,97,0,4,0,0,25,0,226,255,43,0,234,255,42,0,244,255,54,0,237,255,52,0,251,255,48,0,244,255,45,0,1,0,48,0,255,255,64,0,8,0,73,0,9,0,81,0,15,0,95,0,
19,0,95,0,23,0,58,0,27,0,16,0,22,0,221,255,30,0,254,255,30,0,189,0,33,0,15,1,47,0,63,0,38,0,65,1,176,0,3,0,222,0,165,1,70,255,194,254,247,255,132,24,97,0,255,127,124,255,255,127,128,0,255,127,16,0,231,37,29,0,0,128,226,0,0,128,241,0,10,135,134,1,87,151,
229,254,177,45,13,8,73,112,252,56,117,72,178,79,112,251,176,68,239,50,156,25,108,37,81,210,56,217,212,209,152,14,163,188,136,202,78,218,7,190,215,9,195,5,146,2,163,237,216,21,201,235,210,3,172,47,73,31,184,27,228,19,110,255,106,4,205,21,160,3,64,250,
44,238,118,245,248,248,143,3,155,246,136,254,84,247,99,228,246,250,241,241,252,9,181,3,119,253,133,4,149,9,7,22,104,9,240,22,109,1,74,16,205,3,166,2,216,2,98,254,193,255,27,250,24,250,195,243,236,3,134,248,207,253,7,248,70,6,250,242,173,3,199,252,245,
2,78,2,221,2,186,0,232,4,180,12,90,3,87,8,88,255,222,252,9,250,182,252,135,249,3,251,91,252,40,252,222,254,196,255,96,7,242,254,159,1,202,254,45,3,73,3,79,2,77,2,127,0,239,254,185,255,142,254,209,0,77,255,129,250,4,0,178,246,205,255,115,246,61,255,195,
248,61,255,214,254,190,255,255,0,76,0,223,0,22,1,36,0,76,0,233,0,23,1,37,255,70,1,22,1,220,255,35,1,67,0,123,254,115,0,8,255,49,255,78,0,215,255,252,255,205,255,82,1,31,255,93,1,169,255,172,1,126,255,237,254,124,255,127,254,202,255,144,254,12,0,23,255,
52,0,153,255,230,0,122,0,182,0,17,1,110,0,249,0,221,255,118,1,203,255,19,0,9,0,252,0,180,255,101,0,94,255,139,0,113,255,251,255,122,255,209,0,167,255,74,0,42,0,48,0,196,255,85,0,225,255,22,0,56,0,44,0,3,0,232,255,190,255,250,255,211,255,208,255,236,255,
217,255,105,0,166,255,228,0,203,255,201,0,156,255,136,0,228,255,112,0,165,255,86,0,248,255,11,0,37,0,193,255,70,0,155,255,34,0,147,255,119,0,180,255,75,0,199,255,71,0,159,255,95,0,188,255,48,0,3,0,34,0,32,0,42,0,34,0,84,0,17,0,51,0,241,255,66,0,60,0,
243,255,116,0,221,255,124,0,180,255,168,0,162,255,230,0,120,255,227,0,145,255,146,0,180,255,5,0,209,255,96,255,217,255,61,255,3,0,73,255,43,0,57,255,72,0,76,255,120,0,114,255,137,0,133,255,135,0,172,255,152,0,136,255,158,0,68,255,109,0,50,255,98,0,89,
255,48,0,159,255,20,0,249,255,249,255,88,0,227,255,155,0,184,255,227,0,148,255,246,0,138,255,178,0,129,255,90,0,117,255,62,0,132,255,27,0,163,255,14,0,191,255,255,255,227,255,198,255,5,0,183,255,42,0,173,255,74,0,153,255,101,0,148,255,98,0,137,255,81,
0,113,255,48,0,121,255,53,0,110,255,43,0,89,255,6,0,180,255,214,255,39,0,185,255,98,0,161,255,139,0,140,255,148,0,131,255,132,0,130,255,139,0,142,255,135,0,159,255,96,0,186,255,72,0,195,255,45,0,213,255,11,0,244,255,227,255,39,0,184,255,72,0,164,255,
92,0,182,255,93,0,189,255,96,0,168,255,98,0,161,255,95,0,164,255,77,0,201,255,56,0,10,0,47,0,55,0,34,0,68,0,249,255,96,0,211,255,143,0,207,255,183,0,190,255,203,0,180,255,190,0,165,255,163,0,171,255,133,0,210,255,109,0,5,0,63,0,58,0,14,0,84,0,244,255,
78,0,189,255,93,0,111,255,108,0,58,255,124,0,43,255,127,0,78,255,117,0,140,255,93,0,175,255,56,0,187,255,40,0,233,255,13,0,42,0,234,255,98,0,216,255,140,0,203,255,144,0,180,255,152,0,171,255,182,0,184,255,182,0,202,255,165,0,206,255,125,0,210,255,68,
0,213,255,23,0,225,255,200,255,249,255,109,255,250,255,35,255,244,255,240,254,252,255,232,254,3,0,12,255,19,0,110,255,45,0,168,255,51,0,184,255,33,0,192,255,47,0,165,255,73,0,230,255,63,0,106,0,11,0,0,0 };

const char* hrir_lateral_wav = (const char*) temp_binary_data_1;


const char* getNamedResource (const char* resourceNameUTF8, int& numBytes);
const char* getNamedResource (const char* resourceNameUTF8, int& numBytes)
{
    unsigned int hash = 0;

    if (resourceNameUTF8 != nullptr)
        while (*resourceNameUTF8 != 0)
            hash = 31 * hash + (unsigned int) *resourceNameUTF8++;

    switch (hash)
    {
        case 0x086d3db5:  numBytes = 1068; return hrir_frontal_wav;
        case 0x21880bd8:  numBytes = 1068; return hrir_lateral_wav;
        default: break;
    }

    numBytes = 0;
    return nullptr;
}

const char* namedResourceList[] =
{
    "hrir_frontal_wav",
    "hrir_lateral_wav"
};

const char* originalFilenames[] =
{
    "hrir_frontal.wav",
    "hrir_lateral.wav"
};

const char* getNamedResourceOriginalFilename (const char* resourceNameUTF8);
const char* getNamedResourceOriginalFilename (const char* resourceNameUTF8)
{
    for (unsigned int i = 0; i < (sizeof (namedResourceList) / sizeof (namedResourceList[0])); ++i)
        if (strcmp (namedResourceList[i], resourceNameUTF8) == 0)
            return originalFilenames[i];

    return nullptr;
}

}
